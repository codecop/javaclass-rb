=== 0.0.3 not unreleased yet
* added access flag $1000
* added references to used classes
* classpath abstraction

=== 0.0.2 08/04/2009

* refactored code to smaller objects for version and constant pool
* fixed float and double constant pool items
* added tests
* continued implementation with class names and references

=== 0.0.1 01/03/2009
	
* initial version extracted from ClassList project
  * reads the class version and package/public flag of a class
  * understands the constant pool but does not use it

=== Planned

* continue to implement function for fields and methods
* document dependency to ZIP gem in Readme
* implement
  * dump to return the class same as javap
  * isAnnotation (checks version>=5 & superclass)
    * are Annotation extendable, if so how do they look? (javap)
  * isEnum (checks version>=5 & superclass)
    * are Enums extendable (yes), if so how do they look? (javap)
  * scanning of byte code for numbers, which methods loaded, which fields loaded 
* analyse
  * how do Scala classes look like? sth special?
* test
  * test with all classes of all JDKs against javap from this version "compileTheWorld"
  * Java 1.0 - private protected fields.
  * Java 1.0 - http://www.javaworld.com/javaworld/javaqa/1999-06/03-synchronized.html
* deployment
  * find a method to add target parent to all hrefs with absolute URLs, so Links work as expected
* think about
  * "metric" if all referencing classes of a class is another package, propose moving it there.
  * add zip gem to load classes directly from the classpath (i.e. the jars), add gem dependency
    * classpath abstraction, classpath contains list of JARs, folders, ZIPs
    * WARs and EARs contain JARs and folders
    * compare against my old Java implementation 
